basePath: /api/1.0/
definitions:
  domain.AppGroupResponse:
    properties:
      appGroupType:
        $ref: '#/definitions/domain.AppGroupType'
      clusterId:
        type: string
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      description:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/domain.AppGroupStatus'
      statusDescription:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      workflowId:
        type: string
    type: object
  domain.AppGroupStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - AppGroupStatus_PENDING
    - AppGroupStatus_INSTALLING
    - AppGroupStatus_RUNNING
    - AppGroupStatus_DELETING
    - AppGroupStatus_DELETED
    - AppGroupStatus_ERROR
  domain.AppGroupType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - AppGroupType_UNSPECIFIED
    - AppGroupType_LMA
    - AppGroupType_SERVICE_MESH
  domain.AppServeApp:
    properties:
      app_serve_app_tasks:
        items:
          $ref: '#/definitions/domain.AppServeAppTask'
        type: array
      app_type:
        description: app_type (spring/springboot)
        type: string
      created_at:
        description: created_at is a creatioin timestamp for the application
        type: string
      deleted_at:
        type: string
      endpoint_url:
        description: endpoint URL of deployed app
        type: string
      id:
        type: string
      name:
        description: application name
        type: string
      organization_id:
        description: contract_id is a contract ID which this app belongs to
        type: string
      preview_endpoint_url:
        description: preview svc endpoint URL in B/G deployment
        type: string
      status:
        description: status is status of deployed app
        type: string
      target_cluster_id:
        description: target cluster to which the app is deployed
        type: string
      type:
        description: type (build/deploy/all)
        type: string
      updated_at:
        type: string
    type: object
  domain.AppServeAppTask:
    properties:
      app_config:
        description: java app config
        type: string
      app_secret:
        description: java app secret
        type: string
      app_serve_app_id:
        description: ID for appServeApp that this task belongs to.
        type: string
      artifact_url:
        description: URL of java app artifact (Eg, Jar)
        type: string
      created_at:
        description: created_at is  a creation timestamp for the application
        type: string
      deleted_at:
        type: string
      executable_path:
        description: Executable path of app image
        type: string
      extra_env:
        description: env variable list for java app
        type: string
      helm_revision:
        description: revision of deployed helm release
        type: integer
      id:
        type: string
      image_url:
        description: URL of built image for app
        type: string
      output:
        description: output for task result
        type: string
      port:
        description: java app port
        type: string
      profile:
        description: java app profile
        type: string
      pv_access_mode:
        type: string
      pv_enabled:
        type: boolean
      pv_mount_path:
        type: string
      pv_size:
        type: string
      pv_storage_class:
        type: string
      resource_spec:
        description: resource spec of app pod
        type: string
      status:
        description: status is app status
        type: string
      strategy:
        description: deployment strategy (eg, rolling-update)
        type: string
      updated_at:
        type: string
      version:
        description: application version
        type: string
    type: object
  domain.ApplicationResponse:
    properties:
      appGroupId:
        type: string
      applicationType:
        $ref: '#/definitions/domain.ApplicationType'
      createdAt:
        type: string
      endpoint:
        type: string
      id:
        type: string
      metadata:
        type: string
      updatedAt:
        type: string
    type: object
  domain.ApplicationType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    type: integer
    x-enum-varnames:
    - ApplicationType_UNSPECIFIED
    - ApplicationType_THANOS
    - ApplicationType_PROMETHEUS
    - ApplicationType_GRAFANA
    - ApplicationType_KIALI
    - ApplicationType_KIBANA
    - ApplicationType_ELASTICSERCH
    - ApplicationType_CLOUD_CONSOLE
    - ApplicationType_HORIZON
    - ApplicationType_JAEGER
    - ApplicationType_KUBERNETES_DASHBOARD
  domain.ChartData:
    properties:
      series:
        items:
          $ref: '#/definitions/domain.Unit'
        type: array
      xaxis:
        properties:
          data:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
      yaxis:
        properties:
          data:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
    type: object
  domain.CloudAccount:
    properties:
      cloudService:
        type: string
      clusters:
        type: integer
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.User'
      creatorId:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      resource:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.User'
      updatorId:
        type: string
    type: object
  domain.CloudAccountResponse:
    properties:
      cloudService:
        type: string
      clusters:
        type: integer
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      resource:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.SimpleUserResponse'
    type: object
  domain.Cluster:
    properties:
      cloudAccount:
        $ref: '#/definitions/domain.CloudAccount'
      cloudAccountId:
        type: string
      conf:
        $ref: '#/definitions/domain.ClusterConf'
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.User'
      creatorId:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      stackTemplate:
        $ref: '#/definitions/domain.StackTemplate'
      stackTemplateId:
        type: string
      status:
        $ref: '#/definitions/domain.ClusterStatus'
      statusDesc:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.User'
      updatorId:
        type: string
    type: object
  domain.ClusterConf:
    properties:
      machineReplicas:
        type: integer
      machineType:
        type: string
      maxSizePerAz:
        type: integer
      minSizePerAz:
        type: integer
      numOfAz:
        type: integer
      region:
        type: string
      sshKeyName:
        type: string
    type: object
  domain.ClusterConfResponse:
    properties:
      machineReplicas:
        type: integer
      machineType:
        type: string
      maxSizePerAz:
        type: integer
      minSizePerAz:
        type: integer
      numOfAz:
        type: integer
      region:
        type: string
      sshKeyName:
        type: string
    type: object
  domain.ClusterResponse:
    properties:
      cloudAccount:
        $ref: '#/definitions/domain.CloudAccountResponse'
      conf:
        $ref: '#/definitions/domain.ClusterConfResponse'
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      stackTemplate:
        $ref: '#/definitions/domain.StackTemplateResponse'
      status:
        type: string
      statusDesc:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.SimpleUserResponse'
    type: object
  domain.ClusterStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - ClusterStatus_PENDING
    - ClusterStatus_INSTALLING
    - ClusterStatus_RUNNING
    - ClusterStatus_DELETING
    - ClusterStatus_DELETED
    - ClusterStatus_ERROR
  domain.CreateAppGroupRequest:
    properties:
      appGroupType:
        enum:
        - LMA
        - SERVICE_MESH
        type: string
      clusterId:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - clusterId
    - name
    type: object
  domain.CreateAppGroupResponse:
    properties:
      id:
        type: string
    type: object
  domain.CreateAppServeAppRequest:
    properties:
      app_config:
        type: string
      app_secret:
        type: string
      app_type:
        enum:
        - spring
        - springboot
        type: string
      artifact_url:
        type: string
      executable_path:
        type: string
      extra_env:
        type: string
      image_url:
        type: string
      name:
        description: App
        type: string
      organization_id:
        type: string
      port:
        type: string
      profile:
        type: string
      pv_access_mode:
        type: string
      pv_enabled:
        type: boolean
      pv_mount_path:
        type: string
      pv_size:
        type: string
      pv_storage_class:
        type: string
      resource_spec:
        type: string
      strategy:
        enum:
        - rolling-update
        - blue-green
        - canary
        type: string
      target_cluster_id:
        type: string
      type:
        enum:
        - build
        - deploy
        - all
        type: string
      version:
        description: Task
        type: string
    required:
    - name
    - organization_id
    - target_cluster_id
    type: object
  domain.CreateCloudAccountRequest:
    properties:
      accessKeyId:
        maxLength: 128
        minLength: 16
        type: string
      cloudService:
        enum:
        - AWS
        - AZZURE
        - GCP
        type: string
      description:
        type: string
      name:
        type: string
      secretAccessKey:
        maxLength: 128
        minLength: 16
        type: string
      sessionToken:
        maxLength: 2000
        type: string
    required:
    - accessKeyId
    - name
    - secretAccessKey
    type: object
  domain.CreateCloudAccountResponse:
    properties:
      id:
        type: string
    type: object
  domain.CreateClusterRequest:
    properties:
      cloudAccountId:
        type: string
      description:
        type: string
      machineReplicas:
        type: integer
      machineType:
        type: string
      name:
        type: string
      numOfAz:
        type: integer
      organizationId:
        type: string
      region:
        type: string
      stackTemplateId:
        type: string
    type: object
  domain.CreateClusterResponse:
    properties:
      id:
        type: string
    type: object
  domain.CreateOrganizationRequest:
    properties:
      description:
        maxLength: 100
        minLength: 0
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      phone:
        type: string
    required:
    - name
    type: object
  domain.CreateStackRequest:
    properties:
      cloudAccountId:
        type: string
      cpNodeCnt:
        type: integer
      description:
        type: string
      name:
        type: string
      stackTemplateId:
        type: string
      tksNodeCnt:
        type: integer
      userNodeCnt:
        type: integer
    type: object
  domain.CreateStackResponse:
    properties:
      id:
        type: string
    type: object
  domain.CreateStackTemplateRequest:
    properties:
      cloudService:
        enum:
        - AWS
        - AZZURE
        - GCP
        type: string
      description:
        type: string
      name:
        type: string
      platform:
        type: string
      template:
        type: string
      version:
        type: string
    required:
    - name
    - platform
    - template
    - version
    type: object
  domain.CreateStackTemplateResponse:
    properties:
      id:
        type: string
    type: object
  domain.CreateUserRequest:
    properties:
      accountId:
        type: string
      department:
        maxLength: 20
        minLength: 0
        type: string
      description:
        maxLength: 100
        minLength: 0
        type: string
      email:
        type: string
      name:
        maxLength: 20
        minLength: 0
        type: string
      password:
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    required:
    - accountId
    - password
    - role
    type: object
  domain.CreateUserResponse:
    properties:
      user:
        properties:
          accountId:
            type: string
          department:
            type: string
          description:
            type: string
          email:
            type: string
          id:
            type: string
          name:
            type: string
          organization:
            $ref: '#/definitions/domain.Organization'
          role:
            $ref: '#/definitions/domain.Role'
        type: object
    type: object
  domain.DashboardChartResponse:
    properties:
      chartData:
        $ref: '#/definitions/domain.ChartData'
      chartType:
        type: string
      description:
        type: string
      duration:
        type: string
      interval:
        type: string
      name:
        type: string
      organizationId:
        type: string
      updatedAt:
        type: string
    type: object
  domain.DeleteCloudAccountRequest:
    properties:
      accessKeyId:
        maxLength: 128
        minLength: 16
        type: string
      secretAccessKey:
        maxLength: 128
        minLength: 16
        type: string
      sessionToken:
        maxLength: 2000
        type: string
    required:
    - accessKeyId
    - secretAccessKey
    type: object
  domain.DeleteStackRequest:
    properties:
      id:
        type: string
    type: object
  domain.GetAppGroupResponse:
    properties:
      appGroup:
        $ref: '#/definitions/domain.AppGroupResponse'
    type: object
  domain.GetAppGroupsResponse:
    properties:
      appGroups:
        items:
          $ref: '#/definitions/domain.AppGroupResponse'
        type: array
    type: object
  domain.GetApplicationsResponse:
    properties:
      applications:
        items:
          $ref: '#/definitions/domain.ApplicationResponse'
        type: array
    type: object
  domain.GetCloudAccountResponse:
    properties:
      cloudAccount:
        $ref: '#/definitions/domain.CloudAccountResponse'
    type: object
  domain.GetCloudAccountsResponse:
    properties:
      cloudAccounts:
        items:
          $ref: '#/definitions/domain.CloudAccountResponse'
        type: array
    type: object
  domain.GetClustersResponse:
    properties:
      clusters:
        items:
          $ref: '#/definitions/domain.ClusterResponse'
        type: array
    type: object
  domain.GetDashboardChartsResponse:
    properties:
      charts:
        items:
          $ref: '#/definitions/domain.DashboardChartResponse'
        type: array
    type: object
  domain.GetOrganizationResponse:
    properties:
      organization:
        properties:
          createdAt:
            type: string
          creator:
            type: string
          description:
            type: string
          id:
            type: string
          name:
            type: string
          phone:
            type: string
          primaryClusterId:
            type: string
          status:
            type: string
          statusDescription:
            type: string
          updatedAt:
            type: string
        type: object
    type: object
  domain.GetStackResponse:
    properties:
      stack:
        $ref: '#/definitions/domain.StackResponse'
    type: object
  domain.GetStackTemplateResponse:
    properties:
      stackTemplate:
        $ref: '#/definitions/domain.StackTemplateResponse'
    type: object
  domain.GetStackTemplatesResponse:
    properties:
      stackTemplates:
        items:
          $ref: '#/definitions/domain.StackTemplateResponse'
        type: array
    type: object
  domain.GetStacksResponse:
    properties:
      stacks:
        items:
          $ref: '#/definitions/domain.StackResponse'
        type: array
    type: object
  domain.GetUserResponse:
    properties:
      user:
        properties:
          accountId:
            type: string
          createdAt:
            type: string
          creator:
            type: string
          department:
            type: string
          description:
            type: string
          email:
            type: string
          id:
            type: string
          name:
            type: string
          organization:
            $ref: '#/definitions/domain.Organization'
          role:
            $ref: '#/definitions/domain.Role'
          updatedAt:
            type: string
        type: object
    type: object
  domain.History:
    properties:
      accountId:
        type: string
      createdAt:
        type: string
      description:
        type: string
      historyType:
        type: string
      id:
        type: string
      updatedAt:
        type: string
    type: object
  domain.ListOrganizationBody:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      primaryClusterId:
        type: string
      status:
        $ref: '#/definitions/domain.OrganizationStatus'
      updatedAt:
        type: string
    type: object
  domain.ListUserBody:
    properties:
      accountId:
        type: string
      createdAt:
        type: string
      creator:
        type: string
      department:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/domain.Organization'
      role:
        $ref: '#/definitions/domain.Role'
      updatedAt:
        type: string
    type: object
  domain.LoginRequest:
    properties:
      accountId:
        type: string
      organizationId:
        type: string
      password:
        type: string
    required:
    - accountId
    - organizationId
    - password
    type: object
  domain.LoginResponse:
    properties:
      user:
        properties:
          accountId:
            type: string
          name:
            type: string
          organization:
            $ref: '#/definitions/domain.Organization'
          role:
            $ref: '#/definitions/domain.Role'
          token:
            type: string
        type: object
    type: object
  domain.Organization:
    properties:
      createdAt:
        type: string
      creator:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      primaryClusterId:
        type: string
      status:
        $ref: '#/definitions/domain.OrganizationStatus'
      statusDescription:
        type: string
      updatedAt:
        type: string
    type: object
  domain.OrganizationStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    type: integer
    x-enum-varnames:
    - OrganizationStatus_PENDING
    - OrganizationStatus_CREATE
    - OrganizationStatus_CREATING
    - OrganizationStatus_CREATED
    - OrganizationStatus_DELETE
    - OrganizationStatus_DELETING
    - OrganizationStatus_DELETED
    - OrganizationStatus_ERROR
  domain.Role:
    properties:
      createdAt:
        type: string
      creator:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  domain.SimpleUserResponse:
    properties:
      accountId:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  domain.StackResponse:
    properties:
      cloudAccount:
        $ref: '#/definitions/domain.CloudAccountResponse'
      cpNodeCnt:
        type: integer
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      primaryCluster:
        type: boolean
      stackTemplate:
        $ref: '#/definitions/domain.StackTemplateResponse'
      status:
        type: string
      statusDesc:
        type: string
      tksNodeCnt:
        type: integer
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      userNodeCnt:
        type: integer
    type: object
  domain.StackTemplate:
    properties:
      cloudService:
        type: string
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.User'
      creatorId:
        type: string
      description:
        type: string
      id:
        type: string
      kubeType:
        type: string
      kubeVersion:
        type: string
      name:
        type: string
      organizationId:
        type: string
      platform:
        type: string
      services:
        items:
          type: integer
        type: array
      template:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.User'
      updatorId:
        type: string
      version:
        type: string
    type: object
  domain.StackTemplateResponse:
    properties:
      cloudService:
        type: string
      createdAt:
        type: string
      creator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      description:
        type: string
      id:
        type: string
      kubeType:
        type: string
      kubeVersion:
        type: string
      name:
        type: string
      platform:
        type: string
      services:
        items:
          $ref: '#/definitions/domain.StackTemplateServiceResponse'
        type: array
      template:
        type: string
      updatedAt:
        type: string
      updator:
        $ref: '#/definitions/domain.SimpleUserResponse'
      version:
        type: string
    type: object
  domain.StackTemplateServiceApplicationResponse:
    properties:
      description:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  domain.StackTemplateServiceResponse:
    properties:
      applications:
        items:
          $ref: '#/definitions/domain.StackTemplateServiceApplicationResponse'
        type: array
      type:
        type: string
    type: object
  domain.Unit:
    properties:
      data:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  domain.UpdateAppServeAppEndpointRequest:
    properties:
      endpoint_url:
        type: string
      helm_revision:
        type: integer
      preview_endpoint_url:
        type: string
      task_id:
        type: string
    required:
    - task_id
    type: object
  domain.UpdateAppServeAppRequest:
    properties:
      abort:
        type: boolean
      app_config:
        type: string
      app_secret:
        type: string
      app_type:
        type: string
      artifact_url:
        type: string
      executable_path:
        type: string
      extra_env:
        type: string
      id:
        description: App
        type: string
      image_url:
        type: string
      name:
        type: string
      organization_id:
        type: string
      port:
        type: string
      profile:
        type: string
      promote:
        description: Update Strategy
        type: boolean
      pv_access_mode:
        type: string
      pv_enabled:
        type: boolean
      pv_mount_path:
        type: string
      pv_size:
        type: string
      pv_storage_class:
        type: string
      resource_spec:
        type: string
      strategy:
        enum:
        - rolling-update
        - blue-green
        - canary
        type: string
      target_cluster_id:
        type: string
      type:
        type: string
      version:
        description: Task
        type: string
    type: object
  domain.UpdateAppServeAppStatusRequest:
    properties:
      output:
        type: string
      status:
        type: string
      task_id:
        type: string
    required:
    - status
    - task_id
    type: object
  domain.UpdateApplicationRequest:
    properties:
      appGroupId:
        type: string
      applicationType:
        type: string
      endpoint:
        type: string
      metadata:
        type: string
    type: object
  domain.UpdateCloudAccountRequest:
    properties:
      description:
        type: string
    type: object
  domain.UpdateOrganizationRequest:
    properties:
      description:
        maxLength: 100
        minLength: 0
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      phone:
        type: string
      primaryClusterId:
        type: string
    required:
    - name
    type: object
  domain.UpdateOrganizationResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  domain.UpdatePasswordRequest:
    properties:
      newPassword:
        type: string
      originPassword:
        type: string
    required:
    - newPassword
    - originPassword
    type: object
  domain.UpdatePasswordResponse:
    type: object
  domain.UpdatePrimaryClusterRequest:
    properties:
      primaryClusterId:
        type: string
    type: object
  domain.UpdateStackRequest:
    properties:
      id:
        type: string
    type: object
  domain.UpdateStackTemplateRequest:
    properties:
      description:
        type: string
    type: object
  domain.UpdateUserRequest:
    properties:
      department:
        maxLength: 20
        minLength: 0
        type: string
      description:
        maxLength: 100
        minLength: 0
        type: string
      email:
        type: string
      name:
        maxLength: 20
        minLength: 0
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    type: object
  domain.UpdateUserResponse:
    properties:
      user:
        properties:
          accountId:
            type: string
          createdAt:
            type: string
          department:
            type: string
          description:
            type: string
          email:
            type: string
          id:
            type: string
          name:
            type: string
          organization:
            $ref: '#/definitions/domain.Organization'
          role:
            $ref: '#/definitions/domain.Role'
          updatedAt:
            type: string
        type: object
    type: object
  domain.User:
    properties:
      accountId:
        type: string
      createdAt:
        type: string
      creator:
        type: string
      department:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/domain.Organization'
      password:
        type: string
      role:
        $ref: '#/definitions/domain.Role'
      token:
        type: string
      updatedAt:
        type: string
    type: object
host: tks-api-dev.taco-cat.xyz
info:
  contact:
    email: taekyu.kang@sk.com
    name: taekyu.kang@sk.com
  description: This is backend api service for tks platform
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: tks-api service
  version: "1.0"
paths:
  /app-groups:
    delete:
      consumes:
      - application/json
      description: Uninstall appGroup
      parameters:
      - description: body
        in: body
        name: object
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Uninstall appGroup
      tags:
      - AppGroups
    get:
      consumes:
      - application/json
      description: Get appGroup list by giving params
      parameters:
      - description: clusterId
        in: query
        name: clusterId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetAppGroupsResponse'
      security:
      - JWT: []
      summary: Get appGroup list
      tags:
      - AppGroups
    post:
      consumes:
      - application/json
      description: Install appGroup
      parameters:
      - description: create appgroup request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateAppGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateAppGroupResponse'
      security:
      - JWT: []
      summary: Install appGroup
      tags:
      - AppGroups
  /app-groups/{appGroupId}:
    get:
      consumes:
      - application/json
      description: Get appGroup detail by appGroupId
      parameters:
      - description: appGroupId
        in: path
        name: appGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetAppGroupResponse'
      security:
      - JWT: []
      summary: Get appGroup detail
      tags:
      - AppGroups
  /app-groups/{appGroupId}/applications:
    get:
      consumes:
      - application/json
      description: Get applications
      parameters:
      - description: appGroupId
        in: path
        name: appGroupId
        required: true
        type: string
      - description: applicationType
        in: query
        name: applicationType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetApplicationsResponse'
      security:
      - JWT: []
      summary: Get applications
      tags:
      - AppGroups
    post:
      consumes:
      - application/json
      description: Update application
      parameters:
      - description: body
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Update application
      tags:
      - AppGroups
  /app-serve-apps:
    delete:
      consumes:
      - application/json
      description: Uninstall appServeApp
      parameters:
      - description: body
        in: body
        name: object
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - JWT: []
      summary: Uninstall appServeApp
      tags:
      - AppServeApps
    get:
      consumes:
      - application/json
      description: Get appServeApp list by giving params
      parameters:
      - description: organization_Id
        in: query
        name: organization_Id
        type: string
      - description: show_all
        in: query
        name: showAll
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AppServeApp'
            type: array
      security:
      - JWT: []
      summary: Get appServeApp list
      tags:
      - AppServeApps
    post:
      consumes:
      - application/json
      description: Install appServeApp
      parameters:
      - description: create appserve request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/domain.CreateAppServeAppRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Install appServeApp
      tags:
      - AppServeApps
    put:
      consumes:
      - application/json
      description: Update appServeApp
      parameters:
      - description: update appserve request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateAppServeAppRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - JWT: []
      summary: Update appServeApp
      tags:
      - AppServeApps
  /app-serve-apps/{appId}/endpoint:
    patch:
      consumes:
      - application/json
      description: Update app endpoint
      parameters:
      - description: appId
        in: path
        name: appId
        required: true
        type: string
      - description: update app endpoint request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateAppServeAppEndpointRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - JWT: []
      summary: Update app endpoint
      tags:
      - AppServeApps
  /app-serve-apps/{appId}/status:
    patch:
      consumes:
      - application/json
      description: Update app status
      parameters:
      - description: appId
        in: path
        name: appId
        required: true
        type: string
      - description: update app status request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateAppServeAppStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - JWT: []
      summary: Update app status
      tags:
      - AppServeApps
  /app-serve-apps/{appServeAppId}:
    get:
      consumes:
      - application/json
      description: Get appServeApp by giving params
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AppServeApp'
      security:
      - JWT: []
      summary: Get appServeApp
      tags:
      - AppServeApps
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: account info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user detail
          schema:
            $ref: '#/definitions/domain.LoginResponse'
      summary: login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: logout
      tags:
      - Auth
  /clusters:
    get:
      consumes:
      - application/json
      description: Get cluster list
      parameters:
      - description: organizationId
        in: query
        name: organizationId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetClustersResponse'
      security:
      - JWT: []
      summary: Get clusters
      tags:
      - Clusters
    post:
      consumes:
      - application/json
      description: Create cluster
      parameters:
      - description: create cluster request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateClusterResponse'
      security:
      - JWT: []
      summary: Create cluster
      tags:
      - Clusters
  /clusters/{clusterId}:
    delete:
      consumes:
      - application/json
      description: Delete cluster
      parameters:
      - description: clusterId
        in: path
        name: clusterId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cluster'
      security:
      - JWT: []
      summary: Delete cluster
      tags:
      - Clusters
    get:
      consumes:
      - application/json
      description: Get cluster detail
      parameters:
      - description: clusterId
        in: path
        name: clusterId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cluster'
      security:
      - JWT: []
      summary: Get cluster
      tags:
      - Clusters
  /histories:
    get:
      consumes:
      - application/json
      description: Get histories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.History'
      security:
      - JWT: []
      summary: Get histories
      tags:
      - Histories
  /organizations:
    get:
      consumes:
      - application/json
      description: Get organization list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ListOrganizationBody'
            type: array
      security:
      - JWT: []
      summary: Get organization list
      tags:
      - Organizations
    post:
      consumes:
      - application/json
      description: Create organization
      parameters:
      - description: create organization request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - JWT: []
      summary: Create organization
      tags:
      - Organizations
  /organizations/{organizationId}:
    delete:
      consumes:
      - application/json
      description: Delete organization
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Organization'
      security:
      - JWT: []
      summary: Delete organization
      tags:
      - Organizations
    get:
      consumes:
      - application/json
      description: Get organization detail
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetOrganizationResponse'
      security:
      - JWT: []
      summary: Get organization detail
      tags:
      - Organizations
    put:
      consumes:
      - application/json
      description: Update organization detail
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: update organization request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UpdateOrganizationResponse'
      security:
      - JWT: []
      summary: Update organization detail
      tags:
      - Organizations
  /organizations/{organizationId}/cloud-accounts:
    get:
      consumes:
      - application/json
      description: Get CloudAccounts
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetCloudAccountsResponse'
      security:
      - JWT: []
      summary: Get CloudAccounts
      tags:
      - CloudAccounts
    post:
      consumes:
      - application/json
      description: Create CloudAccount
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: create cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateCloudAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateCloudAccountResponse'
      security:
      - JWT: []
      summary: Create CloudAccount
      tags:
      - CloudAccounts
  /organizations/{organizationId}/cloud-accounts/{cloudAccountId}:
    delete:
      consumes:
      - application/json
      description: Delete CloudAccount
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: Delete cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.DeleteCloudAccountRequest'
      - description: cloudAccountId
        in: path
        name: cloudAccountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Delete CloudAccount
      tags:
      - CloudAccounts
    get:
      consumes:
      - application/json
      description: Get CloudAccount
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: cloudAccountId
        in: path
        name: cloudAccountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetCloudAccountResponse'
      security:
      - JWT: []
      summary: Get CloudAccount
      tags:
      - CloudAccounts
    put:
      consumes:
      - application/json
      description: Update CloudAccount
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: Update cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateCloudAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Update CloudAccount
      tags:
      - CloudAccounts
  /organizations/{organizationId}/cloud-accounts/name/{name}/existence:
    get:
      consumes:
      - application/json
      description: Check name for cloudAccount
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Check name for cloudAccount
      tags:
      - CloudAccounts
  /organizations/{organizationId}/dashboard/charts:
    get:
      consumes:
      - application/json
      description: Get chart data
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: chartType
        in: query
        name: chartType
        type: string
      - description: duration
        in: query
        name: duration
        required: true
        type: string
      - description: interval
        in: query
        name: interval
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetDashboardChartsResponse'
      security:
      - JWT: []
      summary: Get chart data
      tags:
      - Dashboards
  /organizations/{organizationId}/primary-cluster:
    patch:
      consumes:
      - application/json
      description: Update primary cluster
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: update primary cluster request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePrimaryClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Update primary cluster
      tags:
      - Organizations
  /organizations/{organizationId}/stacks:
    get:
      consumes:
      - application/json
      description: Get Stacks
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetStacksResponse'
      security:
      - JWT: []
      summary: Get Stacks
      tags:
      - Stacks
    post:
      consumes:
      - application/json
      description: Create Stack
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: create cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateStackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateStackResponse'
      security:
      - JWT: []
      summary: Create Stack
      tags:
      - Stacks
  /organizations/{organizationId}/stacks/{stackId}:
    delete:
      consumes:
      - application/json
      description: Delete Stack
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: stackId
        in: path
        name: stackId
        required: true
        type: string
      - description: Delete cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.DeleteStackRequest'
      - description: stackId
        in: path
        name: stackId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Delete Stack
      tags:
      - Stacks
    get:
      consumes:
      - application/json
      description: Get Stack
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: stackId
        in: path
        name: stackId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetStackResponse'
      security:
      - JWT: []
      summary: Get Stack
      tags:
      - Stacks
    put:
      consumes:
      - application/json
      description: Update Stack
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: stackId
        in: path
        name: stackId
        required: true
        type: string
      - description: Update cloud setting request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateStackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Update Stack
      tags:
      - Stacks
  /organizations/{organizationId}/stacks/name/{name}/existence:
    get:
      consumes:
      - application/json
      description: Check name for stack
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: stackId
        in: path
        name: stackId
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Check name for stack
      tags:
      - Stacks
  /organizations/{organizationId}/users:
    get:
      consumes:
      - application/json
      description: Get user list
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ListUserBody'
            type: array
      security:
      - JWT: []
      summary: Get user list
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: create user request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: create user response
          schema:
            $ref: '#/definitions/domain.CreateUserResponse'
      security:
      - JWT: []
      summary: Create user
      tags:
      - Users
  /organizations/{organizationId}/users/{accountId}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
      security:
      - JWT: []
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user detail
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetUserResponse'
      security:
      - JWT: []
      summary: Get user detail
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user detail
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        type: string
      - description: update user request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UpdateUserResponse'
      security:
      - JWT: []
      summary: Update user detail
      tags:
      - Users
  /organizations/{organizationId}/users/{accountId}/existence:
    get:
      consumes:
      - application/json
      description: return true when accountId exists
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Get user id existence
      tags:
      - Users
  /organizations/{organizationId}/users/{accountId}/password:
    put:
      consumes:
      - application/json
      description: Update user password detail
      parameters:
      - description: organizationId
        in: path
        name: organizationId
        required: true
        type: string
      - description: accountId
        in: path
        name: accountId
        required: true
        type: string
      - description: update user password request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UpdatePasswordResponse'
      security:
      - JWT: []
      summary: Update user password detail
      tags:
      - Users
  /stack-templates:
    get:
      consumes:
      - application/json
      description: Get StackTemplates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetStackTemplatesResponse'
      security:
      - JWT: []
      summary: Get StackTemplates
      tags:
      - StackTemplates
    post:
      consumes:
      - application/json
      description: Create StackTemplate
      parameters:
      - description: create stack template request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateStackTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateStackTemplateResponse'
      security:
      - JWT: []
      summary: Create StackTemplate 'NOT IMPLEMENTED'
      tags:
      - StackTemplates
  /stack-templates/{stackTemplateId}:
    delete:
      consumes:
      - application/json
      description: Delete StackTemplate
      parameters:
      - description: stackTemplateId
        in: path
        name: stackTemplateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Delete StackTemplate 'NOT IMPLEMENTED'
      tags:
      - StackTemplates
    get:
      consumes:
      - application/json
      description: Get StackTemplate
      parameters:
      - description: stackTemplateId
        in: path
        name: stackTemplateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.GetStackTemplateResponse'
      security:
      - JWT: []
      summary: Get StackTemplate
      tags:
      - StackTemplates
    put:
      consumes:
      - application/json
      description: Update StackTemplate
      parameters:
      - description: Update stack template request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateStackTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - JWT: []
      summary: Update StackTemplate 'NOT IMPLEMENTED'
      tags:
      - StackTemplates
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
